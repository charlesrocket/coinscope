# config version format
version = ".2";

permissions :
{
    username = "root";
    group = "root";
};

### Define this according to the coin (used by libraries working on top of coinscope, like hyperion)
coinscope:
{
    path = "/coinscope/";
    coin = "btc";
    network = "mainnet"; # This is used for bitcoin.SelectParams and will only work for Bitcoin. Fork library / create a module in bitcoin_tools to handle more coins.
};

logger:
{
    root = "/var/coinscope/bitcoin/logger/";
    max_buffer = 1024288000; #will disconnect reader clients if buffer is larger than this, in bytes

    # Different log clients sockets (you can connect to them to read specific logs).
    clients:
    {
        all = "clients/all";
        bitcoin = "clients/bitcoin";
        bitcoin_msg = "clients/bitcoin_msg";
        bitcoinx = "client/bitcoinx";
        ctrl = "client/ctrl";
        debug = "client/debug";
        error = "client/error";
    };
};

verbatim:
{
    logpath = "/var/coinscope/bitcoin/verbatim/"; # You can set up verbatim to work with logrotate, which you probably want.
};

getaddr: {
    # getaddr will reinitiate in the product of hour and minutes list
    # TODO: just copy cron format
    schedule: { # in system local time ...
        hours = ( 0 );
        minutes = ( 0 );
    };

    sampling_rate = .05; # probability of a address in addr of being sampled
};

connector:
{
    control_path = "/var/coinscope/bitcoin/bitcoin_control";
    control_listen = 5; # Argument to listen parameter for control sock


    msg_pool_size = 128; # How many registered messages should be kept
    blacklist = "/etc/netmine/blacklist.txt"; # one ip address per line in ascii

    ### Choose your user agent
    user_agent = "/UAB-Coinscope:0.2/";

    bitcoin: {
        # It will listen to the following list of addresses
        # tuples. Note, currently only AF_INET is supported. No check is
        # done to verify that these make sense, other than to try to
        # connect to them. Format is ("family", "ipv4 addr", port,
        # listeners)
        listeners = ( ( "AF_INET", "127.0.0.1", 18999, 128) );
        # listeners = ( );

        seed = "seed.btc.petertodd.org";
        port = 9937;

        ### Specify the ip and port of your machine
        myaddr = ( "158.109.79.23", 9937 );

        # How often should each connection be pinged if we've received
        # no activity. 0 means never.
        ping_frequency = 0;
        active_ping: { # How often should each connection be pinged regardless
            mean = 60.0; # These have to be floating point values
            stddev = 1.0;
        };

        # What start height should we send in version messages initially
        start_height = 346110;
        magic = 0x046BCEB5L;

        max_version = 70002;
        min_version = 209;
        services = 9;
   };
};
